* Scheduling Experiment
*** Discussion:
- The transition diagram view of the experiment.
- Xs = (Td, map: Id -> T, CPU: Id0, timer: t)
- Us = arr(burstTime: T) + syscall() + io-complete-int(id) + select(id) + clock tick
- Only one or two priority levels are enough for now. (MLFQ)
- Doing the scheduling yourself, instead of just seeing the output of the scheduler.
- Try FCFS first.
- Try more on the priority of the IO_completed processes.

** Jan 17th 2024

*** Attendees:
- Prof. Venkatesh Choppella
- Bhargavi
- Yashpal
- Pranav

*** Discussion:
- Elements should be hoverable
- Color coding should be added, for buttons, and info
- Termination -> Completed
- Fonts
- Add dialogues
- JS graph
- Don't mix up display and controls
- Add functions that can be done along with the tick
- Previous states display along with the tick numbers
- Change scheduling policies

** Jan 20, 2024
*** Attendees:
- Prof. Venkatesh Choppella
- Bhargavi
- Yashpal

*** Discussion:
- Upon creating a process, the pid of process should be visible which is about to be created.
- Remaining time should be in the cpu itself for the currently running process.
- There should be color code for each buttons and dialogs differently as well as states of process
- Remove the Instruction box
- The graph pid should on the y-axis (let’s say we have number of process is 5), the x-axis should be the time itself… It should show the state of each process on the chart
- No need of showing completed and terminated process in the process display itself.
- Every tool should be standardized for further experiments as well

** Jan 24, 2024

*** Attendees:
- Prof. Venakatesh
- Bhargavi
- Yashpal
- Aayush

*** Discussion:
- Add back buttons
- Prompt the user to schedule a policy at the start.
- Create logs for every action of the user in the dialogue box.
- Diagram should differentiate between the scheduler, the plant, and the environment(Terminate, New process)
- Select the correct process based on the algorithm to schedule.
- Create a conceptual model, system model and a UI model notes. (.md notes)
- Identify the state space, action space, event space and subsystem space.
- It should be traceable backward.

** Jan 31, 2024
*** Attendees:
- Prof. Venkatesh
- Bhargavi
- Aayush
- Yashpal

*** Discussion:
- *Conceptual Model*: the model should be explaining the role the user in the system.
- *System Model*:
    - The environment is not a part of the system.
    - The user is the environment, which is not a system. The user generate actions.
    - There are three key players: CPU, Process Table, scheduler connected via labeled directed graph
    - *Process Table:*
        - ProcessTable: N->Proc
        - Proc: {
            ArrivalTime: N,
            BurstLength: N(1-30),
            PId: N,
            RemainingDuration: N(1-30),
            State(S): {"Running","Waiting","Ready","Completed","Terminated"},
            Registers: Val^n
        }

    - *Events:* There are four external events that can be generated from the environment that can affect subsystems:-
        - ["Create", "Terminate", "I/O", "Complete"].

** Feb 2, 2024
*** Attendees:
   - Prof. Venkatesh
   - Yashpal
   - Bhargavi
   - Aayush
*** Discussion:
   - Systems diagram [loading should happen from the process table]
   - Show how the UI model can be derived from the Systems model (TODO)
   - UI needs to be documented with both narrative and code.
   - Context-switching: Change the color and every dialogue should have prompt and feedback.
   - The buttons should be disabled according to the mode we are in (Context switching).
   - Add auto scroll in dialogue box.
   - Add a simple error instead of info in dialogue box.
   - Say kstack and PCB are empty when the processes are just loaded. (Context switching)

** Feb 17, 2024
*** Attendees:
   - Prof. Venkatesh
   - Yashpal
   - Bhargavi

*** Discussion:
   - Every button and Current System State/Previous System State should be have i(instruction) button.
   - Dialog box shouold have other colors differennt from the buttons.
   - There is three things you're doing in dialog box:
        - Instruction
        - Feedback
        - Error
   - Choose the colors carefully for each component, which is distinguishable to even color blind people.
   - Alert should be in dialog box, it should not be a pop-up.
   - Before the scheduling, there should be a dialog box to choose the scheduling policy as well as what button to press to schedule the policy.
   - The policy should be chosen at start of the experiment and should not be changed in the middle of the experiment.
   - During scheduling, the feedback should be more carefully chosen.
   - Undo should remove the last feedback from the dialog.
   - Arrival time should be the arrival time of the process in the Ready Queue not the Process creation time.
   - Colors should be less saturated and more opacity.
   - The dialog history should not be visible to the user, if user wants he can see the history of the dialog box.
   - New Process can be created even when the cpu is running a process.
   - Theory:
        -   1st Paragraph: 
            - "By now you must have already realize that an Operating System is not monolithinc system, but instead a complex and meticulous ..."
            - ps can be given as command in the terminal to see the processes as described in the above experiment.
            - After the explaination of already reading of context switching, question should be asked wheather the user have seen the context switching experiment.
   - Investigate the "Web Assembly".
   - Write the code design document as well for the experiment.

** March 1, 2024
*** Attendees:
    - Prof. Venkatesh Choppella
    - Bhargavi
    - Yashpal

*** Discussion:
    - Upon selection of button, dialog box should be showing the action.
    - The dialog box should be showing the feedback & prompt in different colors, distinguishable for color blind people.
    - Scheduling policy should be chosen at the start of the experiment, and can't be changed in the middle of the experiment.
    - Arrow should be shown for selection of the process during scheduling action.
    - There should be i button in map in the current state.
    - Be more generous with the error messages.
    - Explore the possibility of dialog in the experiment with the user.

** March 8, 2024
*** Attendees:
    - Prof. Venkatesh Choppella
    - Bhargavi
    - Yashpal
    - Aayush
    - Pranav

*** Discussion:
    -   Build a mockup of the smol experiment, as an example.
    -   The smol example should be able to integrate with the ibp.
    -   Explore the possibility of storing the state and files in the local storage. 
    -   Change the name of "interrupt" button to "pre-empt" button.
    -   In the procedure of the experiment, introduce all the elements of the simulation.
    -   Don't use sherif fonts for the context switching experiment.
    -   The dialog box should be more interactive.
    -   There should be state and action diagram on context swithcing experiment.
    -   Explore the possibility of automatically generating the intractive theory page.
    -   Create a single Github repo that of OS4all where we can put the minutes of the meeting 
    